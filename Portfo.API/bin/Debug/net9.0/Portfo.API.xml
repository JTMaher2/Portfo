<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Portfo.API</name>
    </assembly>
    <members>
        <member name="M:Portfo.API.Controllers.V1.ActivityController.Get(System.String,System.Int32)">
            <summary>
            Returns a activity entity according to the provided Id.
            </summary>
            <remarks>
            XML comments included in controllers will be extracted and injected in Swagger/OpenAPI file.
            </remarks>
            <parameter>
            postID
            </parameter>
            <returns>
            Returns a activity entity according to the provided Id.
            </returns>
            <response code="200">Returns the item with the provided Id.</response>
            <response code="204">If the item is null.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.ActivityController.RaiseException(System.String)">
            <summary>
            Endpoint to raise an exception and test how the exceptions are handled.
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Portfo.API.Controllers.V1.AddressController.Get(System.String)">
            <summary>
            Returns a address entity according to the provided Id.
            </summary>
            <remarks>
            XML comments included in controllers will be extracted and injected in Swagger/OpenAPI file.
            </remarks>
            <param name="id"></param>
            <returns>
            Returns a address entity according to the provided Id.
            </returns>
            <response code="200">Returns the item with the provided Id.</response>
            <response code="204">If the item is null.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.AddressController.CreateAddress(Portfo.API.DataContracts.Requests.AddressCreationRequest)">
            <summary>
            Creates a address.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value"></param>
            <returns>A newly created address.</returns>
            <response code="201">Returns the newly created item.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.AddressController.UpdateAddress(Portfo.API.DataContracts.Requests.AddressUpdateRequest)">
            <summary>
            Updates an address entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="parameter"></param>
            <returns>
            Returns a boolean notifying if the address has been updated properly.
            </returns>
            <response code="200">Returns a boolean notifying if the address has been updated properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.AddressController.DeleteDevice(System.String)">
            <summary>
            Deletes an address entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="id">Address Id</param>
            <returns>
            Boolean notifying if the address has been deleted properly.
            </returns>
            <response code="200">Boolean notifying if the address has been deleted properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.AddressController.RaiseException(System.String)">
            <summary>
            Endpoint to raise an exception and test how the exceptions are handled.
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Portfo.API.Controllers.V1.LikeController.CreateLike(Portfo.API.DataContracts.Requests.LikeCreationRequest)">
            <summary>
            Creates a like.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value"></param>
            <returns>A newly created like.</returns>
            <response code="201">Returns the newly created item.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.LikeController.DeleteDevice(System.String)">
            <summary>
            Deletes a like entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="id">Like Id</param>
            <returns>
            Boolean notifying if the like has been deleted properly.
            </returns>
            <response code="200">Boolean notifying if the like has been deleted properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.PostController.GetPost(System.String)">
            <summary>
            Returns a post entity according to the provided Id.
            </summary>
            <remarks>
            XML comments included in controllers will be extracted and injected in Swagger/OpenAPI file.
            </remarks>
            <param name="id"></param>
            <returns>
            Returns a post entity according to the provided Id.
            </returns>
            <response code="200">Returns the item with the provided Id.</response>
            <response code="204">If the item is null.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.PostController.CreatePost(Portfo.API.DataContracts.Requests.PostCreationRequest)">
            <summary>
            Creates a post.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value"></param>
            <returns>A newly created post.</returns>
            <response code="201">Returns the newly created item.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.PostController.UpdatePost(Portfo.API.DataContracts.Requests.PostUpdateRequest)">
            <summary>
            Updates an post entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="parameter"></param>
            <returns>
            Returns a boolean notifying if the post has been updated properly.
            </returns>
            <response code="200">Returns a boolean notifying if the post has been updated properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.PostController.DeletePost(System.String)">
            <summary>
            Deletes an post entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="id">Post Id</param>
            <returns>
            Boolean notifying if the post has been deleted properly.
            </returns>
            <response code="200">Boolean notifying if the post has been deleted properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.PostController.RaiseException(System.String)">
            <summary>
            Endpoint to raise an exception and test how the exceptions are handled.
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Portfo.API.Controllers.V1.UserController.Get(System.String)">
            <summary>
            Returns a user entity according to the provided Id.
            </summary>
            <remarks>
            XML comments included in controllers will be extracted and injected in Swagger/OpenAPI file.
            </remarks>
            <param name="id"></param>
            <returns>
            Returns a user entity according to the provided Id.
            </returns>
            <response code="200">Returns the item with the provided Id.</response>
            <response code="204">If the item is null.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.UserController.CreateUser(Portfo.API.DataContracts.Requests.UserCreationRequest)">
            <summary>
            Creates a user.
            </summary>
            <remarks>
            
            </remarks>
            <param name="value"></param>
            <returns>A newly created user.</returns>
            <response code="201">Returns the newly created item.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.UserController.UpdateUser(Portfo.API.DataContracts.Requests.UserUpdateRequest)">
            <summary>
            Updates an user entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="parameter"></param>
            <returns>
            Returns a boolean notifying if the user has been updated properly.
            </returns>
            <response code="200">Returns a boolean notifying if the user has been updated properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.UserController.DeleteDevice(System.String)">
            <summary>
            Deletes an user entity.
            </summary>
            <remarks>
            
            </remarks>
            <param name="id">User Id</param>
            <returns>
            Boolean notifying if the user has been deleted properly.
            </returns>
            <response code="200">Boolean notifying if the user has been deleted properly.</response>
        </member>
        <member name="M:Portfo.API.Controllers.V1.UserController.RaiseException(System.String)">
            <summary>
            Endpoint to raise an exception and test how the exceptions are handled.
            </summary>
            <param name="message"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
    </members>
</doc>
